{
	"info": {
		"_postman_id": "7c93a2c1-5825-4144-9799-b74030a7b721",
		"name": "Python app",
		"description": "This API is exposed by a Flask app created to manipulate users data.\n\n# Overview\n\nThis documentation is generated by Postman. The endpoints and its description are listed below. Some sample requests and responses are shown in the GUI on the right panel, you may select from the drop-down menu to checkout more sample requests.\n\n# Authentication\n\nThis API used JWT authentication, and some of the endpoints requires a valid JWT access token.\n\n# Configuration\n\nThis collection requires several predefined environemtn variable, which are listed below. You will need to add them to your own envirment when testing.\n\n- `url`: The root url of the Flask app. The default value should be `127.0.0.1:5000`\n- `test_email`: An email address used to test and register users in the app. It will need to be reachable by MailGun services.\n- `confirmation_id`: (optional) ConfirmationModel id. It will be set automatically by some of the request test scripts.\n- `access_token`: (optional) JWT used for login. It will be set automatically by some of the request test scripts.\n- `refresh_token`: (optional) Used for refreshing a JWT. It will be set automatically by some of the request test scripts.\n\n# Error Codes\n\n- 400: when there is a bad request\n- 401: when there is an unsuccessful authentication\n- 404: when the requested data is not found\n- 500: when something else unexpected occurs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "register a new user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"admin\",\n\t\"password\": \"1234\"\n}"
						},
						"url": {
							"raw": "{{url}}/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"register"
							]
						},
						"description": "Register a new user."
					},
					"response": [
						{
							"name": "register a new user",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"jose\",\n\t\"email\": \"john.doe@some_mail.com\",\n\t\"password\": \"1234\"\n}"
								},
								"url": {
									"raw": "{{url}}/register",
									"host": [
										"{{url}}"
									],
									"path": [
										"register"
									]
								}
							},
							"status": "CREATED",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "48",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Wed, 23 May 2018 15:55:58 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"User created successfully.\"\n}\n"
						},
						{
							"name": "register using a duplicate username",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"jose\",\n\t\"email\": \"john.doe@somemail.com\",\n\t\"password\": \"1234\"\n}"
								},
								"url": {
									"raw": "{{url}}/register",
									"host": [
										"{{url}}"
									],
									"path": [
										"register"
									]
								}
							},
							"status": "BAD REQUEST",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "62",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Wed, 23 May 2018 16:04:58 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"A user with that username already exists\"\n}\n"
						},
						{
							"name": "register using a duplicate email",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"john\",\n\t\"email\": \"john.doe@duplicatemail.com\",\n\t\"password\": \"1234\"\n}"
								},
								"url": {
									"raw": "{{url}}/register",
									"host": [
										"{{url}}"
									],
									"path": [
										"register"
									]
								}
							},
							"status": "BAD REQUEST",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "59",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Wed, 23 May 2018 16:05:41 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"A user with that email already exists\"\n}\n"
						}
					]
				},
				{
					"name": "login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\" : \"admin\",\n  \"password\" : \"1234\"\n}"
						},
						"url": {
							"raw": "{{url}}/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"login"
							]
						},
						"description": "Login using username and password."
					},
					"response": [
						{
							"name": "login successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\" : \"jose\",\n  \"password\" : \"1234\"\n}"
								},
								"url": {
									"raw": "{{url}}/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "570",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Wed, 23 May 2018 16:12:22 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"access_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1MjcwOTE5NDIsIm5iZiI6MTUyNzA5MTk0MiwianRpIjoiOWUxZjQxMzUtODU0Ny00MWYzLWJkNjMtMzRiYzcyNDc1MmI0IiwiZXhwIjoxNTI3MDkyODQyLCJpZGVudGl0eSI6MSwiZnJlc2giOnRydWUsInR5cGUiOiJhY2Nlc3MifQ.ekXY9wyn50mQ2xk5smTUL10b5igKoY_placeholder\",\n    \"refresh_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1MjcwOTE5NDIsIm5iZiI6MTUyNzA5MTk0MiwianRpIjoiYmY4YjhmZjktYjMxMC00NDJjLTg4MzAtZjU2MzdkNTU1OGE5IiwiZXhwIjoxNTI5NjgzOTQyLCJpZGVudGl0eSI6MSwidHlwZSI6InJlZnJlc2gifQ.d1D-QnRfZTgNJBrAUSJXu4J8GZ1tmD_placeholder\"\n}"
						},
						{
							"name": "login before confirming registration",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\" : \"jose\",\n  \"password\" : \"1234\"\n}"
								},
								"url": {
									"raw": "{{url}}/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "BAD REQUEST",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "108",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Wed, 23 May 2018 16:16:00 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"You have not confirmed registration, please check your email <cristiano7yl@gmail.com>.\"\n}\n"
						},
						{
							"name": "login failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\" : \"jose\",\n  \"password\" : \"12345\"\n}"
								},
								"url": {
									"raw": "{{url}}/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "UNAUTHORIZED",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "42",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Wed, 23 May 2018 16:13:14 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Invalid Credentials!\"\n}\n"
						}
					]
				},
				{
					"name": "find user by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "45a97d4e-a943-4c18-8085-868167783592",
								"type": "text/javascript",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.test(\"user confirmation found\", function () {",
									"    pm.expect(jsonData.confirmation).not.eql(undefined);",
									"});",
									"",
									"if (jsonData.confirmation !== undefined) {",
									"    pm.environment.set(\"confirmation_id\", jsonData.confirmation.id);",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/user/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"1"
							]
						},
						"description": "Find a user by its id."
					},
					"response": [
						{
							"name": "user not found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/user/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"2"
									]
								}
							},
							"status": "NOT FOUND",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "36",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:32:24 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"User not found\"\n}\n"
						},
						{
							"name": "get user by id",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/user/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "242",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:31:14 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"username\": \"jose\",\n    \"email\": \"cristiano7yl@gmail.com\",\n    \"confirmation\": {\n        \"id\": \"1f17df9b558a4c25ae935cc2e33ccfb7\",\n        \"expire_at\": \"1527093886\",\n        \"user_id\": 1,\n        \"confirmed\": false\n    }\n}\n"
						}
					]
				},
				{
					"name": "get users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fbde2369-987f-48e6-aa0d-c9f8a99a915f",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Find all users."
					},
					"response": [
						{
							"name": "user not found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/user/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"2"
									]
								}
							},
							"status": "NOT FOUND",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "36",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:32:24 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"User not found\"\n}\n"
						},
						{
							"name": "get user by id",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/user/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "242",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:31:14 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"username\": \"jose\",\n    \"email\": \"cristiano7yl@gmail.com\",\n    \"confirmation\": {\n        \"id\": \"1f17df9b558a4c25ae935cc2e33ccfb7\",\n        \"expire_at\": \"1527093886\",\n        \"user_id\": 1,\n        \"confirmed\": false\n    }\n}\n"
						}
					]
				},
				{
					"name": "delete user by id",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/user/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"1"
							]
						},
						"description": "Delete a user by its id."
					},
					"response": [
						{
							"name": "delete user successfully",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"jose\",\n\t\"password\": \"1234\"\n}"
								},
								"url": {
									"raw": "{{url}}/user/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "35",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Wed, 23 May 2018 16:13:47 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"User deleted.\"\n}\n"
						},
						{
							"name": "delete non-existing user",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"jose\",\n\t\"password\": \"1234\"\n}"
								},
								"url": {
									"raw": "{{url}}/user/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"1"
									]
								}
							},
							"status": "NOT FOUND",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "36",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Wed, 23 May 2018 16:14:08 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"User not found\"\n}\n"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "78ea0950-0d36-4fb3-b428-1b2470e8f66b",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "d62bfbc5-657b-4605-961b-eb1ec91ace9f",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "1c67fc44-48a4-44a6-95db-3975502a92ab",
			"key": "url",
			"value": "127.0.0.1:5000",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}